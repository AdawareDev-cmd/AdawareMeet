interface LoggerOptions {
    showTimestamp: boolean;
    showLogLevel: boolean;
    logFileOptions: LogFileOptions;
}
interface LogFileOptions {
    enabled: boolean;
    logLevels: LogLevel[];
    filename: string;
    folderPath: string;
    addTimestamp: boolean;
    addLogLevel: boolean;
}
declare type LogLevel = 'log' | 'warn' | 'all';
declare enum LogType {
    LOG = "LOG",
    WARN = "WARN",
    ERR = "ERR"
}
export declare class Logger {
    private showTimestamp;
    private showLogLevel;
    private logFilePath;
    private logFileOptions;
    protected logFile: number;
    constructor(loggerOptions?: LoggerOptions);
    log(message: string): void;
    warn(message: string): void;
    err(message: string): void;
    private saveLog;
    protected printMessage(logType: LogType, message: string): void;
    protected getTimestamp(): string;
    protected colorLogType(logType: LogType): string;
}
export {};
